{"version":3,"file":"index-CKp3qMQl.js","sources":["../src/js/generator.js","../src/js/game.js","../src/services/countdown.js","../src/js/onscreen-keyboard.js","../src/js/audio-player.js","../src/js/audio-sound-effect.js","../src/js/audio-background-music.js","../src/services/storage.js","../src/js/main.js"],"sourcesContent":["export class Generator {\n  generateNumber(min, max) {\n    if (min >= max) throw new Error('Minimum should be less than maximum.');\n\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n}\n\nexport const generator = new Generator();\n","import { generator } from './generator';\n\nexport class Game {\n  constructor() {\n    this.modes = {\n      Easy: [1, 10],\n      Normal: [1, 100],\n      Hard: [1, 1000],\n    };\n    this.startedAt = +Infinity;\n    this.stoppedAt = +Infinity;\n\n    this.onTick = () => {};\n  }\n\n  setMode(mode) {\n    this.currentMode = mode;\n\n    const selectedMode = this.modes[mode];\n\n    if (!selectedMode) throw new Error(`Mode \"${mode}\" doesn't exists.`);\n\n    this.numberToGuess = generator.generateNumber(...selectedMode);\n  }\n\n  getSelectedMode() {\n    return `${this.currentMode}`;\n  }\n\n  getFormattedMode() {\n    const [min, max] = this.modes[this.currentMode]; //destructure\n\n    return `${this.currentMode} <b>[${min}, ${max}]</b>`;\n  }\n\n  isEqualTo(value) {\n    return value === this.numberToGuess;\n  }\n\n  isGreaterThan(value) {\n    return this.numberToGuess > value;\n  }\n\n  isLessThan(value) {\n    return this.numberToGuess < value;\n  }\n\n  reset() {\n    this.setMode(this.currentMode);\n  }\n\n  startTimer() {\n    this.startedAt = Date.now();\n    this.timerId = setInterval(() => {\n      const elapsedTimeMs = Date.now() - this.startedAt;\n      const elapsedTimeSec = elapsedTimeMs / 1000;\n      this.onTick(elapsedTimeSec.toFixed(2));\n    }, 128);\n  }\n\n  stopTimer() {\n    this.stoppedAt = Date.now();\n    clearInterval(this.timerId);\n  }\n\n  getPlayerTime() {\n    return this.stoppedAt - this.startedAt;\n  }\n}\n","/**\n * Annotations below are from JSDocs @link - https://jsdoc.app/\n */\n\n/**\n * The `Countdown` class provides a countdown timer that can be used to display a \"get ready\" countdown\n * before gameplay begins. This class utilizes the callback design pattern to allow the caller\n * to execute custom functions at each tick of the countdown and upon completion.\n *\n * @example\n * const countdown = new Countdown(3);\n * countdown.onTick = (timeLeft) => console.log(timeLeft);\n * countdown.onFinish = () => console.log('Go!');\n * countdown.start();\n *\n * @class\n */\nexport class Countdown {\n  /**\n   * Creates an instance of the Countdown class.\n   *\n   * @constructor\n   * @param {number} start - The starting value for the countdown, in seconds.\n   */\n  constructor(start) {\n    /**\n     * @private - Marked as private to make sure it won't show up in IDE suggestions (but it still can be used, because it is Javascript afterall ðŸ˜€)\n     * @type {number} - We need to save it in the context because we want to reset timer, so we know what the original reset value is\n     */\n    this.defaultTime = start;\n\n    /**\n     * @private\n     */\n    this.callback = {\n      onStart: () => {},\n      onTick: () => {},\n      onFinish: () => {},\n    };\n  }\n\n  /**\n   * Sets the callback function to be called on every tick of the countdown.\n   *\n   * @param {function(number): void} callback - The function to call on each tick. Receives the remaining time as an argument.\n   */\n  set onTick(callback) {\n    this.callback.onTick = callback;\n  }\n\n  /**\n   * Sets the callback function to be called when the countdown finishes.\n   *\n   * @param {function(): void} callback - The function to call when the countdown reaches zero.\n   */\n  set onFinish(callback) {\n    this.callback.onFinish = callback;\n  }\n\n  /**\n   * Sets the callback function to be called when the countdown starts(before the 1st tick).\n   *\n   * @param {function(): void} callback - The function to call when start is invoked\n   */\n  set onStart(callback) {\n    this.callback.onStart = callback;\n  }\n\n  /**\n   * Starts the countdown timer. The `onTick` callback is invoked every second,\n   * and the `onFinish` callback is invoked when the countdown reaches zero.\n   *\n   * @method\n   */\n  start() {\n    let counter = this.defaultTime; // Reset timer to a default start value\n\n    this.callback.onStart(); // Call onStart function/callback\n    this.callback.onTick(counter); // Invoke it immediately\n\n    // Set up the timer for subsequent ticks\n    const timerId = setInterval(() => {\n      counter--; // Decrement counter value\n\n      if (counter === 0) {\n        // Signal that the countdown has finished\n        this.callback.onFinish();\n        // Stop the timer when it reaches zero\n        return clearInterval(timerId);\n      }\n\n      // Continue ticking and invoke the onTick callback\n      this.callback.onTick(counter);\n    }, 1000);\n  }\n}\n\nfunction FunctionContructorTimer(start = 3) {\n  const callback = {\n    onTick: null,\n    onFinish: null,\n  };\n\n  this.setOnTick = (fn) => (callback.onTick = fn);\n  this.setOnFInish = (fn) => (callback.onFinish = fn);\n\n  this.start = () => {\n    let counter = start;\n\n    callback.onTick(--counter);\n\n    const timerId = setInterval(() => {\n      if (counter === 0) {\n        callback.onFinish();\n        return clearInterval(timerId);\n      }\n\n      callback.onTick(--counter);\n    }, 1000);\n  };\n}\n","export class Keyboard {\n  constructor(selector) {\n    $(selector)\n      .find('button')\n      .on('click', ({ target }) => {\n        // const { target } = e; // obj destructure\n\n        const value = target.dataset.value;\n        if (value === 'Clear') this.onClear();\n        else if (value === 'Backspace') this.onBackspace();\n        else this.onNumber(parseInt(value));\n      });\n\n    this.onClear = () => {};\n    this.onBackspace = () => {};\n    this.onEnter = () => {};\n    this.onNumber = () => {};\n\n    const map = {\n      Enter: () => this.onEnter(),\n      NumpadEnter: () => this.onEnter(),\n\n      Backspace: () => this.onBackspace(),\n      Digit0: () => this.onNumber(0),\n      Digit1: () => this.onNumber(1),\n      Digit2: () => this.onNumber(2),\n      Digit3: () => this.onNumber(3),\n      Digit4: () => this.onNumber(4),\n      Digit5: () => this.onNumber(5),\n      Digit6: () => this.onNumber(6),\n      Digit7: () => this.onNumber(7),\n      Digit8: () => this.onNumber(8),\n      Digit9: () => this.onNumber(9),\n\n      Numpad0: () => this.onNumber(0),\n      Numpad1: () => this.onNumber(1),\n      Numpad2: () => this.onNumber(2),\n      Numpad3: () => this.onNumber(3),\n      Numpad4: () => this.onNumber(4),\n      Numpad5: () => this.onNumber(5),\n      Numpad6: () => this.onNumber(6),\n      Numpad7: () => this.onNumber(7),\n      Numpad8: () => this.onNumber(8),\n      Numpad9: () => this.onNumber(9),\n    };\n\n    $(document).on('keydown', (event) => {\n      if (!$(selector).is(':visible')) return;\n\n      const action = map[event.code];\n\n      if (action) action();\n    });\n  }\n}\n","/**\n * @typedef {Object} AudioType - Audio properties\n * @property {string} AudioType.key - Audio key (Unique key)\n * @property {string} [AudioType.name] - Audio name (For HTML to display)\n * @property {number} [AudioType.startAt = 0] - Starting point in seconds\n * @property {number} [AudioType.stopAt] - Stopping point in seconds. (Defaults to the length of audio)\n * @property {HTMLAudioElement} [AudioType.player] - Audio instance\n */\n\n/**\n * @abstract - it should not be instantiated directly! But extended. :P\n */\nexport class AudioPlayer {\n  /**\n   * @param {AudioType[]} audios - Audios to register\n   */\n  constructor(audios) {\n    this.audios = audios;\n    this.current = null;\n  }\n\n  /**\n   * @param {number} volume - Default volume between [0 - 100]\n   */\n  setVolume(volume) {\n    this.volume = volume / 100;\n    this.audios = this.audios.map((audio) => {\n      audio.player.volume = this.volume;\n\n      return audio;\n    });\n  }\n\n  play(key, options = {}) {\n    const { player } = this.getAudioBy(key);\n    if (options.loop) player.loop = options.loop;\n    player.play();\n  }\n\n  stop(key) {\n    const { player } = this.getAudioBy(key);\n    player.pause();\n    player.current = 0;\n  }\n\n  getAudioBy(key) {\n    const audioFound = this.audios.find((audio) => audio.key === key);\n\n    if (!audioFound) throw new Error(`Audio by key: ${key} not found!`);\n\n    return audioFound;\n  }\n}\n","import { AudioPlayer } from './audio-player';\n\nexport class SoundEffect extends AudioPlayer {\n  constructor() {\n    super([\n      { key: 'EnterGame', player: new Audio('music/effects/enter-game.mp3') },\n      { key: 'NewGame', player: new Audio('music/effects/new-game.mp3') },\n      { key: 'Click', player: new Audio('music/effects/click.mp3') },\n      { key: 'Win', player: new Audio('music/effects/win.mp3') },\n      { key: 'NewBest', player: new Audio('music/effects/new-best.mp3') },\n      { key: 'Error', player: new Audio('music/effects/error.mp3') },\n    ]);\n  }\n\n  playEnterGame() {\n    this.play('EnterGame');\n  }\n\n  playNewGame() {\n    this.play('NewGame');\n  }\n\n  playClick() {\n    this.play('Click');\n  }\n\n  playWin() {\n    this.play('Win');\n  }\n\n  playNewBest() {\n    this.play('NewBest');\n  }\n\n  playError() {\n    this.play('Error');\n  }\n}\n","import { AudioPlayer } from './audio-player';\n\nexport class BackgroundMusic extends AudioPlayer {\n  constructor() {\n    super([\n      {\n        name: 'Default (My favorite!)',\n        key: 'Default',\n        player: new Audio('music/bgm/default.mp3'),\n      },\n      {\n        name: 'Cutesy Fantasy',\n        key: 'Track01',\n        player: new Audio('music/bgm/tr1-cutesy-fantasy.mp3'),\n      },\n      {\n        name: 'Fire up the zone',\n        key: 'Track02',\n        player: new Audio('music/bgm/tr2-fire-up-the-zone.mp3'),\n      },\n      {\n        name: \"Let's play arcade\",\n        key: 'Track03',\n        player: new Audio('music/bgm/tr3-lets-play-arcade.mp3'),\n      },\n      {\n        name: 'No rush, just chill',\n        key: 'Track04',\n        player: new Audio('music/bgm/tr4-no-rush-just-chill.mp3'),\n      },\n      {\n        name: 'Yes, like when you are a kid',\n        key: 'Track05',\n        player: new Audio('music/bgm/tr5-yes-like-when-you-were-a-kid.mp3'),\n      },\n    ]);\n  }\n\n  playDefault() {\n    this.stop('Default');\n    this.play('Default');\n  }\n\n  stopAll() {\n    this.audios.forEach((audio) => {\n      this.stop(audio.key);\n    });\n  }\n}\n","export class SimpleStorage {\n  constructor() {\n    this._storeName = 'GUESS-GAME-DATA';\n    this._defaultData = {\n      playerName: '',\n      highScore: {\n        Easy: {\n          playerName: 'Unknown',\n          bestScore: 9999999,\n        },\n        Normal: {\n          playerName: 'Unknown',\n          bestScore: 9999999,\n        },\n        Hard: {\n          playerName: 'Unknown',\n          bestScore: 9999999,\n        },\n      },\n      audio: {\n        enabled: true,\n        volume: {\n          background: 35,\n          effect: 80,\n        },\n        activeBackgroundMusic: 'Default',\n      },\n      scores: {\n        Easy: [],\n        Normal: [],\n        Hard: [],\n      },\n    };\n  }\n\n  // Private Methods (_get, _save):\n  // Retrieves data from localStorage. If no data is found, it returns the _defaultData.\n  _get() {\n    const data = localStorage.getItem(this._storeName);\n\n    if (data) return JSON.parse(data);\n\n    return this._defaultData;\n  }\n\n  // Saves the provided data back into localStorage after converting it to a JSON string.\n  _save(data) {\n    localStorage.setItem(this._storeName, JSON.stringify(data));\n  }\n\n  // Public Methods:\n  getAll() {\n    return this._get();\n  }\n\n  //player name\n  getPlayerName() {\n    return this._get().playerName;\n  }\n\n  updatePlayerName(name) {\n    const data = this._get();\n    this._save({\n      ...data, // spreading old data\n      playerName: name, // overriding only 1 property\n    });\n\n    // or\n    // this._save({\n    //   playerName: 'Katie',\n    //   highScore: data.highScore,\n    //   audio: data.audio,\n    // });\n\n    // or\n    // data.playerName = 'Katie';\n    // this._save(data);\n  }\n\n  //scores\n  getAllScoresMode() {\n    const scores = this._get().scores;\n    const allModes = scores.map((score) => score.mode); // Map to get the 'mode' property from each object\n    return allModes; // Return the array of modes\n  }\n\n  getAllScores() {\n    const scores = this._get().scores;\n    return scores;\n  }\n\n  getAllEasyScores() {\n    const easyScores = this._get()\n      .scores.filter((score) => score.mode === 'Easy')\n      .map((score) => score.score);\n\n    return easyScores;\n  }\n\n  addScores(playerName, mode, score) {\n    const data = this._get();\n\n    data.scores[mode].push({\n      playerName,\n      score,\n    });\n\n    this._save(data);\n  }\n\n  //highscores\n  getHighScores() {\n    return this._get().highScore;\n  }\n\n  updateAllHighScores(highScore, mode) {\n    const data = this._get();\n    data.highScore[mode] = highScore;\n\n    this._save(data);\n  }\n\n  // audio:\n  getAudioIsEnabled() {\n    return this._get().audio.enabled;\n  }\n\n  getAudioVolume() {\n    return this._get().audio.volume;\n  }\n\n  updateAudioEnabled(enabled) {\n    const data = this._get();\n    data.audio.enabled = enabled;\n\n    this._save(data);\n  }\n\n  updateBackgroundVolume(volume) {\n    const data = this._get();\n    data.audio.volume.background = volume;\n\n    this._save(data);\n  }\n\n  updateEffectVolume(volume) {\n    const data = this._get();\n    data.audio.volume.effect = volume;\n\n    this._save(data);\n  }\n\n  // background music:\n  getBackgroundMusic() {\n    return this._get().audio.activeBackgroundMusic;\n  }\n\n  updateBackgroundMusic(name) {\n    const data = this._get();\n    data.audio.activeBackgroundMusic = name;\n\n    this._save(data);\n  }\n\n  resetAudio() {\n    const data = this._get();\n    const { audio } = this._defaultData;\n    this._save({\n      ...data,\n      audio: audio,\n    });\n  }\n}\n","import '@fortawesome/fontawesome-free/css/all.min.css';\nimport { Game } from './game';\nimport { Countdown } from '../services/countdown';\nimport { Keyboard } from './onscreen-keyboard';\nimport { SoundEffect } from './audio-sound-effect';\nimport { BackgroundMusic } from './audio-background-music';\nimport { SimpleStorage } from '../services/storage';\n\nexport class Session {\n  constructor() {\n    this.countdownMainDiv = $('#countdownMainDiv');\n    this.welcomeMainDiv = $('#welcomeMainDiv');\n    this.startGameMainDiv = $('#startGameMainDiv');\n    this.newGameButtonsDiv = $('#newGameButtonsDiv');\n    this.modeDiv = $('#modeDiv');\n    this.counterDiv = $('#counterText');\n    this.startBtn = $('#startBtn');\n    this.startNewBtn = $('#startNewBtn');\n    this.startAgainBtn = $('#startAgainBtn');\n    this.modes = $('input[name=\"mode\"]');\n    this.elapsedTime = $('#elapsedTime');\n    this.onScreenKeyboardDiv = $('#onScreenKeyboardDiv');\n\n    this.playerInputDiv = $('#playerInputDiv');\n    this.playerNameInput = $('#playerNameInput');\n    this.playerNameText = $('#playerNameText');\n    this.playerInput = $('#playerInput');\n    this.playerSubmitDiv = $('#playerSubmitDiv');\n    this.playerSubmitBtn = $('#playerSubmitBtn');\n\n    this.bestScoreName = $('#score>.best>.name');\n    this.bestScoreTime = $('#score>.best>.time');\n    this.currentScoreName = $('#score>.current>.name');\n    this.currentScoreTime = $('#score>.current>.time');\n\n    this.modeText = $('#modeText');\n    this.hintText = $('#hintText');\n    this.hintIcon = $('#hintIcon');\n    this.hintDiv = $('#hintDiv');\n    this.youWonDiv = $('#youWonDiv');\n    this.youWonScore = $('#youWonDiv>.score');\n    this.youWonText = $('#youWonText');\n    this.newBestText = $('#newBestText');\n\n    this.easyModeOption = $('#easyMode');\n    this.normalModeOption = $('#normalMode');\n    this.hardModeOption = $('#hardMode');\n\n    this.settingsControl = $('.settings-control');\n    this.volumnToggle = $('.volume-toggle');\n    this.volumnIcon = $('.volume-toggle-icon');\n    this.modal = $('.modal');\n    this.closeModal = $('.modal-container>.close');\n    this.selectBackgroundAudios = $('#background-audios');\n    this.saveSound = $('#saveSound');\n    this.resetSound = $('#resetSound');\n    this.effectSound = $('#effectSound');\n    this.bgSound = $('#bgSound');\n\n    this.game = new Game();\n    this.countdownTimer = new Countdown(3);\n    this.backgroundMusic = new BackgroundMusic();\n    this.soundEffect = new SoundEffect();\n    this.store = new SimpleStorage();\n    this.keyboard = new Keyboard('#onScreenKeyboardDiv');\n\n    this.showWelcomePage();\n    this.subscribeEventListeners();\n    this.resetEverything();\n    this.registerAudios();\n    this.restoreLocalSettings();\n    this.displayInitialHighScores();\n\n    this.playerNameInput.val(this.store.getPlayerName());\n  }\n\n  restoreLocalSettings() {\n    this.store.resetAudio();\n\n    const { audio } = this.store.getAll();\n    const currentTrack = this.store.getBackgroundMusic();\n\n    this.effectSound.val(audio.volume.effect);\n    this.bgSound.val(audio.volume.background);\n\n    $(`#${currentTrack}`).prop('checked', true);\n    this.backgroundMusic.setVolume(audio.volume.background);\n    this.soundEffect.setVolume(audio.volume.effect);\n\n    this.backgroundMusic.play(currentTrack, { loop: true });\n  }\n\n  subscribeEventListeners() {\n    $(document).one('click', () => {\n      if (this.store.getAudioIsEnabled()) {\n        const currentTrack = this.store.getBackgroundMusic();\n        this.backgroundMusic.play(currentTrack, { loop: true });\n      }\n    });\n\n    this.effectSound.on('change', () => {\n      this.store.updateEffectVolume(+this.effectSound.val());\n      this.soundEffect.setVolume(+this.effectSound.val());\n    });\n\n    this.bgSound.on('change', () => {\n      this.store.updateBackgroundVolume(+this.bgSound.val());\n      this.backgroundMusic.setVolume(+this.bgSound.val());\n    });\n\n    this.settingsControl.on('click', () => {\n      this.soundEffect.playClick();\n      this.modal.show('ease-out duration-300');\n      $(`#${this.store.getBackgroundMusic()}`).prop('checked', true);\n    });\n\n    this.closeModal.on('click', () => {\n      const currentTrack = this.store.getBackgroundMusic();\n\n      this.soundEffect.playClick();\n      this.backgroundMusic.stopAll();\n      this.backgroundMusic.play(currentTrack, { loop: true });\n\n      this.modal.hide('ease-in duration-200');\n    });\n\n    this.saveSound.on('click', () => {\n      const selectedAudioKey = $('input[name=\"sound\"]:checked').val();\n\n      this.store.updateBackgroundMusic(selectedAudioKey);\n      this.soundEffect.playClick();\n      this.modal.hide('ease-in duration-200');\n    });\n\n    this.volumnToggle.on('click', () => {\n      this.soundEffect.playClick();\n\n      if (this.store.getAudioIsEnabled()) {\n        //update the audio to false\n        this.store.updateAudioEnabled(false);\n        this.volumnIcon.removeClass('fa-volume-low').addClass('fa-volume-xmark');\n        this.backgroundMusic.stopAll();\n        return;\n      }\n\n      if (!this.store.getAudioIsEnabled()) {\n        //update the audio to true\n        const currentTrack = this.store.getBackgroundMusic();\n\n        this.store.updateAudioEnabled(true);\n        this.volumnIcon.removeClass('fa-volume-xmark').addClass('fa-volume-low');\n        this.backgroundMusic.play(currentTrack, { loop: true });\n        return;\n      }\n    });\n\n    // selecting background music:\n    this.selectBackgroundAudios.on('change', 'input[name=\"sound\"]', () => {\n      this.soundEffect.playClick();\n\n      const selectedAudioKey = $('input[name=\"sound\"]:checked').val();\n\n      this.backgroundMusic.stopAll();\n      this.backgroundMusic.play(selectedAudioKey, { loop: true });\n    });\n\n    this.resetSound.on('click', () => {\n      this.soundEffect.playClick();\n      this.backgroundMusic.stopAll();\n      this.restoreLocalSettings();\n    });\n\n    // on-screen keyboard listeners\n    this.keyboard.onClear = () => {\n      this.hintDiv.fadeOut('fast');\n      this.playerInput.val('');\n    };\n\n    this.keyboard.onBackspace = () => {\n      const val = parseInt(this.playerInput.val());\n      const div = Math.floor(val / 10);\n      this.playerInput.val(div || '');\n      this.hintDiv.fadeOut('fast');\n    };\n\n    this.keyboard.onEnter = () => {\n      this.guess();\n    };\n\n    this.keyboard.onNumber = (value) => {\n      // clear input when user clicks on keyboard again\n      if (this.playerSubmitBtn.attr('data-clicked') === 'true') {\n        this.playerInput.val('');\n        this.playerSubmitBtn.attr('data-clicked', 'false');\n      }\n      const val = parseInt(this.playerInput.val() || 0);\n      const target = val * 10 + value;\n      this.playerInput.val(target);\n      this.hintDiv.fadeOut('fast');\n    };\n\n    this.game.onTick = (elapsedTime) => {\n      this.elapsedTime.text(`${elapsedTime} sec`);\n    };\n\n    // player engangements\n    this.startBtn.on('click', () => {\n      this.soundEffect.playEnterGame();\n\n      const playerName = this.playerNameInput.val();\n      this.selectedMode = $('input[name=\"mode\"]:checked').val();\n\n      if (!playerName) {\n        this.soundEffect.playError();\n        this.playerNameInput.effect('shake');\n        return;\n      }\n      if (!this.selectedMode) {\n        this.soundEffect.playError();\n        this.modeDiv.effect('shake');\n        return;\n      }\n\n      this.store.updatePlayerName(playerName);\n      this.game.setMode(this.selectedMode);\n      this.countdownTimer.start();\n    });\n\n    this.playerSubmitBtn.on('click', () => {\n      this.guess();\n    });\n\n    // this.startGameMainDiv.on('keydown', (event) => {\n    //   if (event.code === 'Enter') {\n    //     this.guess();\n    //   }\n    // });\n\n    this.startNewBtn.on('click', () => {\n      this.soundEffect.playEnterGame();\n      this.showWelcomePage();\n      this.displayInitialHighScores();\n    });\n\n    this.startAgainBtn.on('click', () => {\n      this.soundEffect.playEnterGame();\n      this.tryAgain();\n    });\n\n    this.playerInput\n      .on('click', () => {\n        this.playerInput.val('');\n      })\n      .on('keydown', () => {\n        this.hintDiv.fadeOut('fast');\n      });\n\n    this.modes.on('click', () => {\n      this.soundEffect.playClick();\n    });\n\n    this.countdownTimer.onStart = () => {\n      this.showCountDownPage();\n    };\n\n    this.countdownTimer.onTick = (countDownValue) => {\n      this.counterDiv.text(countDownValue);\n    };\n\n    this.countdownTimer.onFinish = () => {\n      this.showNewSession();\n      this.game.startTimer();\n    };\n  }\n\n  // show and start new session\n  showNewSession() {\n    this.showStartGamePage();\n    this.showGameDetails();\n  }\n\n  showWelcomePage() {\n    this.countdownMainDiv.hide();\n    this.startGameMainDiv.hide();\n    this.welcomeMainDiv.show();\n    this.resetEverything();\n  }\n\n  showCountDownPage() {\n    this.welcomeMainDiv.hide();\n    this.startGameMainDiv.hide();\n    this.countdownMainDiv.show();\n  }\n\n  showStartGamePage() {\n    this.welcomeMainDiv.hide();\n    this.countdownMainDiv.hide();\n    this.newGameButtonsDiv.hide();\n\n    this.startGameMainDiv.show();\n    this.playerSubmitDiv.show();\n    this.newBestText.hide();\n  }\n\n  displayInitialHighScores() {\n    const highScores = this.store.getHighScores();\n    const bestSc = (score) => (score / 1000).toFixed(2);\n\n    $('#best-name-Easy').text(highScores.Easy.playerName);\n    $('#best-name-Normal').text(highScores.Normal.playerName);\n    $('#best-name-Hard').text(highScores.Hard.playerName);\n\n    $('#best-score-Easy').text(bestSc(highScores.Easy.bestScore));\n    $('#best-score-Normal').text(bestSc(highScores.Normal.bestScore));\n    $('#best-score-Hard').text(bestSc(highScores.Hard.bestScore));\n  }\n\n  resetEverything() {\n    this.resetPartial();\n    this.modes.prop('checked', false);\n    this.playerNameInput.val('');\n  }\n\n  resetPartial() {\n    this.playerInput.removeAttr('disabled');\n\n    this.playerInput.val('');\n    this.hintDiv.hide();\n    this.youWonDiv.hide();\n    this.newGameButtonsDiv.hide();\n    this.playerSubmitDiv.show('slow');\n    this.onScreenKeyboardDiv.show();\n  }\n\n  tryAgain() {\n    this.resetPartial();\n    this.game.reset();\n    this.countdownTimer.start();\n  }\n\n  showGameDetails() {\n    this.playerNameText.text(this.playerNameInput.val());\n    this.modeText.html(this.game.getFormattedMode());\n\n    this.currentScoreName.text(this.playerNameInput.val());\n    this.currentScoreTime.text('0.00');\n\n    this.displayHighScoreDetails();\n  }\n\n  markWrongInput() {\n    this.soundEffect.playClick();\n    this.hintDiv.fadeIn();\n    this.playerInputDiv.effect('shake');\n  }\n\n  guess() {\n    const inputValue = parseInt(this.playerInput.val());\n    this.hintDiv.hide();\n    this.playerSubmitBtn.attr('data-clicked', 'true');\n\n    if (this.game.isGreaterThan(inputValue)) {\n      this.hintIcon.removeClass('fa-arrow-up text-green-500').addClass('fa-arrow-down text-red-500');\n      this.hintText.html(`Your number <b>(${inputValue})</b> is <b>lower</b> than target!`);\n      this.markWrongInput();\n    }\n\n    if (this.game.isLessThan(inputValue)) {\n      this.hintIcon.removeClass('fa-arrow-down text-red-500').addClass('fa-arrow-up text-green-500');\n      this.hintText.html(`Your number <b>(${inputValue})</b> is <b>higher</b> than target`);\n      this.markWrongInput();\n    }\n\n    if (this.game.isEqualTo(inputValue)) {\n      this.game.stopTimer();\n\n      this.soundEffect.playWin();\n      this.youWonDiv.show();\n      this.playerInput.attr('disabled', '');\n      this.hintDiv.hide();\n      this.playerSubmitDiv.hide();\n      this.onScreenKeyboardDiv.hide();\n\n      this.newGameButtonsDiv.fadeIn();\n\n      setTimeout(() => {\n        this.newGameButtonsDiv.addClass('animate-bounce');\n      }, 2300);\n\n      const timeMs = this.game.getPlayerTime();\n      this.store.addScores(this.playerNameInput.val(), this.game.getSelectedMode(), timeMs);\n\n      this.evaluateBestScore();\n    }\n  }\n\n  displayScoreDetails() {\n    const timeMs = this.game.getPlayerTime();\n    const timeSc = timeMs / 1000;\n    const currentSessionScore = timeSc.toFixed(2);\n\n    // update elements with current score\n    this.currentScoreTime.text(currentSessionScore);\n    this.elapsedTime.text(currentSessionScore);\n    this.youWonScore.text(`Time: ${currentSessionScore}`);\n  }\n\n  displayHighScoreDetails() {\n    const highScores = this.store.getHighScores();\n    const currentMode = this.game.getSelectedMode();\n    const currentHighScorer = highScores[currentMode];\n    this.bestScoreName.text(currentHighScorer.playerName);\n    this.bestScoreTime.text((currentHighScorer.bestScore / 1000).toFixed(2));\n  }\n\n  evaluateBestScore() {\n    const currentMode = this.game.getSelectedMode();\n    const allScores = this.store.getAllScores();\n\n    const highScore = {\n      Easy: {\n        playerName: 'No name',\n        bestScore: 999999,\n      },\n      Normal: {\n        playerName: 'No name',\n        bestScore: 999999,\n      },\n      Hard: {\n        playerName: 'No name',\n        bestScore: 999999,\n      },\n    };\n\n    for (let scoreObj of allScores[currentMode]) {\n      if (scoreObj.score < highScore[currentMode].bestScore) {\n        highScore[currentMode].bestScore = scoreObj.score;\n        highScore[currentMode].playerName = scoreObj.playerName;\n      }\n    }\n\n    this.store.updateAllHighScores(highScore[currentMode], currentMode);\n\n    const newScore = allScores[currentMode][allScores[currentMode].length - 1];\n\n    if (newScore.score == highScore[currentMode].bestScore) {\n      this.displayScoreDetails();\n      this.displayHighScoreDetails();\n      this.displayBestConfetti();\n      this.newBestText.show();\n      this.youWonText.text('Congratulations!');\n    } else {\n      this.displayScoreDetails();\n      this.displayConfetti();\n      this.youWonText.text(\"You're right!\");\n    }\n  }\n\n  displayBestConfetti() {\n    const end = Date.now() + 15 * 350;\n\n    const colors = ['#29cdff', '#78ff44', '#a864fd'];\n\n    (function frame() {\n      confetti({\n        particleCount: 2,\n        angle: 60,\n        spread: 55,\n        origin: { x: 0 },\n        colors: colors,\n      });\n\n      confetti({\n        particleCount: 2,\n        angle: 120,\n        spread: 55,\n        origin: { x: 1 },\n        colors: colors,\n      });\n\n      if (Date.now() < end) {\n        requestAnimationFrame(frame);\n      }\n    })();\n  }\n\n  displayConfetti() {\n    confetti({\n      particleCount: 100,\n      spread: 70,\n      origin: { y: 0.6 },\n    });\n  }\n\n  registerAudios() {\n    this.backgroundMusic.audios.forEach((audio) => {\n      this.selectBackgroundAudios.append(`\n        <div class=\"inline-flex items-center\">\n         <label class=\"relative flex cursor-pointer items-center rounded-full p-2\" for=\"${audio.key}\">\n           <input\n             name=\"sound\"\n             type=\"radio\"\n             class=\"before:content[''] border-blue-gray-200 before:bg-blue-gray-500 checked:border-default-bg-default-orange peer relative h-5 w-5 cursor-pointer appearance-none rounded-full border text-gray-900 transition-all before:absolute before:left-2/4 before:top-2/4 before:block before:h-8 before:w-8 before:-translate-x-2/4 before:-translate-y-2/4 before:rounded-full before:opacity-0 before:transition-opacity checked:before:bg-default-orange hover:before:opacity-10\"\n             id=\"${audio.key}\"\n             value=\"${audio.key}\"\n           />\n \n           <span\n             class=\"pointer-events-none absolute left-2/4 top-2/4 -translate-x-2/4 -translate-y-2/4 text-default-orange opacity-0 transition-opacity peer-checked:opacity-100\"\n           >\n             <svg\n               xmlns=\"http://www.w3.org/2000/svg\"\n               class=\"h-3.5 w-3.5\"\n               viewBox=\"0 0 16 16\"\n               fill=\"currentColor\"\n             >\n               <circle data-name=\"ellipse\" cx=\"8\" cy=\"8\" r=\"8\"></circle>\n             </svg>\n           </span>\n         </label>\n         <label class=\"mt-px cursor-pointer select-none text-sm text-gray-500\" for=\"${audio.key}\">\n           ${audio.name}\n         </label>\n       </div>\n      `);\n    });\n  }\n}\n\n// Instantiate and start the session\nconst gameApp = new Session();\n"],"names":["Generator","min","max","generator","Game","mode","selectedMode","value","elapsedTimeSec","Countdown","start","callback","counter","timerId","Keyboard","selector","target","map","event","action","AudioPlayer","audios","volume","audio","key","options","player","audioFound","SoundEffect","BackgroundMusic","SimpleStorage","data","name","score","playerName","highScore","enabled","Session","currentTrack","selectedAudioKey","val","div","elapsedTime","countDownValue","highScores","bestSc","inputValue","timeMs","currentSessionScore","currentMode","currentHighScorer","allScores","scoreObj","end","colors","frame"],"mappings":"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"}