(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();class c{generateNumber(e,t){if(e>=t)throw new Error("Minimum should be less than maximum.");return Math.floor(Math.random()*(t-e)+e)}}const l=new c;class h{constructor(){this.modes={Easy:[1,10],Normal:[1,100],Hard:[1,1e3]},this.startedAt=1/0,this.stoppedAt=1/0,this.onTick=()=>{}}setMode(e){this.currentMode=e;const t=this.modes[e];if(!t)throw new Error(`Mode "${e}" doesn't exists.`);this.numberToGuess=l.generateNumber(...t)}getSelectedMode(){return`${this.currentMode}`}getFormattedMode(){const[e,t]=this.modes[this.currentMode];return`${this.currentMode} <b>[${e}, ${t}]</b>`}isEqualTo(e){return e===this.numberToGuess}isGreaterThan(e){return this.numberToGuess>e}isLessThan(e){return this.numberToGuess<e}reset(){this.setMode(this.currentMode)}startTimer(){this.startedAt=Date.now(),this.timerId=setInterval(()=>{const t=(Date.now()-this.startedAt)/1e3;this.onTick(t.toFixed(2))},128)}stopTimer(){this.stoppedAt=Date.now(),clearInterval(this.timerId)}getPlayerTime(){return this.stoppedAt-this.startedAt}}class u{constructor(e){this.defaultTime=e,this.callback={onStart:()=>{},onTick:()=>{},onFinish:()=>{}}}set onTick(e){this.callback.onTick=e}set onFinish(e){this.callback.onFinish=e}set onStart(e){this.callback.onStart=e}start(){let e=this.defaultTime;this.callback.onStart(),this.callback.onTick(e);const t=setInterval(()=>{if(e--,e===0)return this.callback.onFinish(),clearInterval(t);this.callback.onTick(e)},1e3)}}class d{constructor(e){$(e).find("button").on("click",({target:t})=>{const s=t.dataset.value;s==="Clear"?this.onClear():s==="Backspace"?this.onBackspace():this.onNumber(parseInt(s))}),this.onClear=()=>{},this.onBackspace=()=>{},this.onNumber=()=>{}}}class n{constructor(e){this.audios=e,this.current=null}setVolume(e){this.volume=e/100,this.audios=this.audios.map(t=>(t.player.volume=this.volume,t))}play(e,t={}){const{player:s}=this.getAudioBy(e);t.loop&&(s.loop=t.loop),s.play()}stop(e){const{player:t}=this.getAudioBy(e);t.pause(),t.current=0}getAudioBy(e){const t=this.audios.find(s=>s.key===e);if(!t)throw new Error(`Audio by key: ${e} not found!`);return t}}class m extends n{constructor(){super([{key:"EnterGame",player:new Audio("music/effects/enter-game.mp3")},{key:"NewGame",player:new Audio("music/effects/new-game.mp3")},{key:"Click",player:new Audio("music/effects/click.mp3")},{key:"Win",player:new Audio("music/effects/win.mp3")},{key:"NewBest",player:new Audio("music/effects/new-best.mp3")},{key:"Error",player:new Audio("music/effects/error.mp3")}])}playEnterGame(){this.play("EnterGame")}playNewGame(){this.play("NewGame")}playClick(){this.play("Click")}playWin(){this.play("Win")}playNewBest(){this.play("NewBest")}playError(){this.play("Error")}}class p extends n{constructor(){super([{name:"Default (My favorite!)",key:"Default",player:new Audio("music/bgm/default.mp3")},{name:"Cutesy Fantasy",key:"Track01",player:new Audio("music/bgm/tr1-cutesy-fantasy.mp3")},{name:"Fire up the zone",key:"Track02",player:new Audio("music/bgm/tr2-fire-up-the-zone.mp3")},{name:"Let's play arcade",key:"Track03",player:new Audio("music/bgm/tr3-lets-play-arcade.mp3")},{name:"No rush, just chill",key:"Track04",player:new Audio("music/bgm/tr4-no-rush-just-chill.mp3")},{name:"Yes, like when you are a kid",key:"Track05",player:new Audio("music/bgm/tr5-yes-like-when-you-were-a-kid.mp3")}])}playDefault(){this.stop("Default"),this.play("Default")}stopAll(){this.audios.forEach(e=>{this.stop(e.key)})}}class y{constructor(){this._storeName="GUESS-GAME-DATA",this._defaultData={playerName:"",highScore:{Easy:{playerName:"Unknown",bestScore:9999999},Normal:{playerName:"Unknown",bestScore:9999999},Hard:{playerName:"Unknown",bestScore:9999999}},audio:{enabled:!0,volume:{background:35,effect:80},activeBackgroundMusic:"Default"},scores:{Easy:[],Normal:[],Hard:[]}}}_get(){const e=localStorage.getItem(this._storeName);return e?JSON.parse(e):this._defaultData}_save(e){localStorage.setItem(this._storeName,JSON.stringify(e))}getAll(){return this._get()}getPlayerName(){return this._get().playerName}updatePlayerName(e){const t=this._get();this._save({...t,playerName:e})}getAllScoresMode(){return this._get().scores.map(s=>s.mode)}getAllScores(){return this._get().scores}getAllEasyScores(){return this._get().scores.filter(t=>t.mode==="Easy").map(t=>t.score)}addScores(e,t,s){const i=this._get();i.scores[t].push({playerName:e,score:s}),this._save(i)}getHighScores(){return this._get().highScore}updateAllHighScores(e,t){const s=this._get();s.highScore[t]=e,this._save(s)}getAudioIsEnabled(){return this._get().audio.enabled}getAudioVolume(){return this._get().audio.volume}updateAudioEnabled(e){const t=this._get();t.audio.enabled=e,this._save(t)}updateBackgroundVolume(e){const t=this._get();t.audio.volume.background=e,this._save(t)}updateEffectVolume(e){const t=this._get();t.audio.volume.effect=e,this._save(t)}getBackgroundMusic(){return this._get().audio.activeBackgroundMusic}updateBackgroundMusic(e){const t=this._get();t.audio.activeBackgroundMusic=e,this._save(t)}resetAudio(){const e=this._get(),{audio:t}=this._defaultData;this._save({...e,audio:t})}}class g{constructor(){this.countdownMainDiv=$("#countdownMainDiv"),this.welcomeMainDiv=$("#welcomeMainDiv"),this.startGameMainDiv=$("#startGameMainDiv"),this.newGameButtonsDiv=$("#newGameButtonsDiv"),this.modeDiv=$("#modeDiv"),this.counterDiv=$("#counterText"),this.startBtn=$("#startBtn"),this.startNewBtn=$("#startNewBtn"),this.startAgainBtn=$("#startAgainBtn"),this.modes=$('input[name="mode"]'),this.elapsedTime=$("#elapsedTime"),this.onScreenKeyboardDiv=$("#onScreenKeyboardDiv"),this.playerInputDiv=$("#playerInputDiv"),this.playerNameInput=$("#playerNameInput"),this.playerNameText=$("#playerNameText"),this.playerInput=$("#playerInput"),this.playerSubmitDiv=$("#playerSubmitDiv"),this.playerSubmitBtn=$("#playerSubmitBtn"),this.bestScoreName=$("#score>.best>.name"),this.bestScoreTime=$("#score>.best>.time"),this.currentScoreName=$("#score>.current>.name"),this.currentScoreTime=$("#score>.current>.time"),this.modeText=$("#modeText"),this.hintText=$("#hintText"),this.hintIcon=$("#hintIcon"),this.hintDiv=$("#hintDiv"),this.youWonDiv=$("#youWonDiv"),this.youWonScore=$("#youWonDiv>.score"),this.youWonText=$("#youWonText"),this.newBestText=$("#newBestText"),this.easyModeOption=$("#easyMode"),this.normalModeOption=$("#normalMode"),this.hardModeOption=$("#hardMode"),this.settingsControl=$(".settings-control"),this.volumnToggle=$(".volume-toggle"),this.volumnIcon=$(".volume-toggle-icon"),this.modal=$(".modal"),this.closeModal=$(".modal-container>.close"),this.selectBackgroundAudios=$("#background-audios"),this.saveSound=$("#saveSound"),this.resetSound=$("#resetSound"),this.effectSound=$("#effectSound"),this.bgSound=$("#bgSound"),this.game=new h,this.countdownTimer=new u(3),this.backgroundMusic=new p,this.soundEffect=new m,this.store=new y,this.keyboard=new d("#onScreenKeyboardDiv"),this.showWelcomePage(),this.subscribeEventListeners(),this.resetEverything(),this.registerAudios(),this.restoreLocalSettings(),this.displayInitialHighScores(),this.playerNameInput.val(this.store.getPlayerName())}restoreLocalSettings(){this.store.resetAudio();const{audio:e}=this.store.getAll(),t=this.store.getBackgroundMusic();this.effectSound.val(e.volume.effect),this.bgSound.val(e.volume.background),$(`#${t}`).prop("checked",!0),this.backgroundMusic.setVolume(e.volume.background),this.soundEffect.setVolume(e.volume.effect),this.backgroundMusic.play(t,{loop:!0})}subscribeEventListeners(){$(document).one("click",()=>{if(this.store.getAudioIsEnabled()){const e=this.store.getBackgroundMusic();this.backgroundMusic.play(e,{loop:!0})}}),this.effectSound.on("change",()=>{this.store.updateEffectVolume(+this.effectSound.val()),this.soundEffect.setVolume(+this.effectSound.val())}),this.bgSound.on("change",()=>{this.store.updateBackgroundVolume(+this.bgSound.val()),this.backgroundMusic.setVolume(+this.bgSound.val())}),this.settingsControl.on("click",()=>{this.soundEffect.playClick(),this.modal.show("ease-out duration-300"),$(`#${this.store.getBackgroundMusic()}`).prop("checked",!0)}),this.closeModal.on("click",()=>{const e=this.store.getBackgroundMusic();this.soundEffect.playClick(),this.backgroundMusic.stopAll(),this.backgroundMusic.play(e,{loop:!0}),this.modal.hide("ease-in duration-200")}),this.saveSound.on("click",()=>{const e=$('input[name="sound"]:checked').val();this.store.updateBackgroundMusic(e),this.soundEffect.playClick(),this.modal.hide("ease-in duration-200")}),this.volumnToggle.on("click",()=>{if(this.soundEffect.playClick(),this.store.getAudioIsEnabled()){this.store.updateAudioEnabled(!1),this.volumnIcon.removeClass("fa-volume-low").addClass("fa-volume-xmark"),this.backgroundMusic.stopAll();return}if(!this.store.getAudioIsEnabled()){const e=this.store.getBackgroundMusic();this.store.updateAudioEnabled(!0),this.volumnIcon.removeClass("fa-volume-xmark").addClass("fa-volume-low"),this.backgroundMusic.play(e,{loop:!0});return}}),this.selectBackgroundAudios.on("change",'input[name="sound"]',()=>{this.soundEffect.playClick();const e=$('input[name="sound"]:checked').val();this.backgroundMusic.stopAll(),this.backgroundMusic.play(e,{loop:!0})}),this.resetSound.on("click",()=>{this.soundEffect.playClick(),this.backgroundMusic.stopAll(),this.restoreLocalSettings()}),this.keyboard.onClear=()=>{this.hintDiv.fadeOut("fast"),this.playerInput.val("")},this.keyboard.onBackspace=()=>{const e=parseInt(this.playerInput.val()),t=Math.floor(e/10);this.playerInput.val(t||""),this.hintDiv.fadeOut("fast")},this.keyboard.onNumber=e=>{this.playerSubmitBtn.attr("data-clicked")==="true"&&(this.playerInput.val(""),this.playerSubmitBtn.attr("data-clicked","false"));const s=parseInt(this.playerInput.val()||0)*10+e;this.playerInput.val(s),this.hintDiv.fadeOut("fast")},this.game.onTick=e=>{this.elapsedTime.text(`${e} sec`)},this.startBtn.on("click",()=>{this.soundEffect.playEnterGame();const e=this.playerNameInput.val();if(this.selectedMode=$('input[name="mode"]:checked').val(),!e){this.soundEffect.playError(),this.playerNameInput.effect("shake");return}if(!this.selectedMode){this.soundEffect.playError(),this.modeDiv.effect("shake");return}this.store.updatePlayerName(e),this.game.setMode(this.selectedMode),this.countdownTimer.start()}),this.playerSubmitBtn.on("click",()=>{this.guess()}),this.startGameMainDiv.on("keydown",e=>{e.code==="Enter"&&this.guess()}),this.startNewBtn.on("click",()=>{this.soundEffect.playEnterGame(),this.showWelcomePage(),this.displayInitialHighScores()}),this.startAgainBtn.on("click",()=>{this.soundEffect.playEnterGame(),this.tryAgain()}),this.playerInput.on("click",()=>{this.playerInput.val("")}).on("keydown",()=>{this.hintDiv.fadeOut("fast")}),this.modes.on("click",()=>{this.soundEffect.playClick()}),this.countdownTimer.onStart=()=>{this.showCountDownPage()},this.countdownTimer.onTick=e=>{this.counterDiv.text(e)},this.countdownTimer.onFinish=()=>{this.showNewSession(),this.game.startTimer()}}showNewSession(){this.showStartGamePage(),this.showGameDetails()}showWelcomePage(){this.countdownMainDiv.hide(),this.startGameMainDiv.hide(),this.welcomeMainDiv.show(),this.resetEverything()}showCountDownPage(){this.welcomeMainDiv.hide(),this.startGameMainDiv.hide(),this.countdownMainDiv.show()}showStartGamePage(){this.welcomeMainDiv.hide(),this.countdownMainDiv.hide(),this.newGameButtonsDiv.hide(),this.startGameMainDiv.show(),this.playerSubmitDiv.show(),this.newBestText.hide()}displayInitialHighScores(){const e=this.store.getHighScores(),t=s=>(s/1e3).toFixed(2);$("#best-name-Easy").text(e.Easy.playerName),$("#best-name-Normal").text(e.Normal.playerName),$("#best-name-Hard").text(e.Hard.playerName),$("#best-score-Easy").text(t(e.Easy.bestScore)),$("#best-score-Normal").text(t(e.Normal.bestScore)),$("#best-score-Hard").text(t(e.Hard.bestScore))}resetEverything(){this.resetPartial(),this.modes.prop("checked",!1),this.playerNameInput.val("")}resetPartial(){this.playerInput.removeAttr("disabled"),this.playerInput.val(""),this.hintDiv.hide(),this.youWonDiv.hide(),this.newGameButtonsDiv.hide(),this.playerSubmitDiv.show("slow"),this.onScreenKeyboardDiv.show()}tryAgain(){this.resetPartial(),this.game.reset(),this.countdownTimer.start()}showGameDetails(){this.playerNameText.text(this.playerNameInput.val()),this.modeText.html(this.game.getFormattedMode()),this.currentScoreName.text(this.playerNameInput.val()),this.currentScoreTime.text("0.00"),this.displayHighScoreDetails()}markWrongInput(){this.soundEffect.playClick(),this.hintDiv.fadeIn(),this.playerInputDiv.effect("shake")}guess(){const e=parseInt(this.playerInput.val());if(this.hintDiv.hide(),this.playerSubmitBtn.attr("data-clicked","true"),this.game.isGreaterThan(e)&&(this.hintIcon.removeClass("fa-arrow-up text-green-500").addClass("fa-arrow-down text-red-500"),this.hintText.html(`Your number <b>(${e})</b> is <b>lower</b> than target!`),this.markWrongInput()),this.game.isLessThan(e)&&(this.hintIcon.removeClass("fa-arrow-down text-red-500").addClass("fa-arrow-up text-green-500"),this.hintText.html(`Your number <b>(${e})</b> is <b>higher</b> than target`),this.markWrongInput()),this.game.isEqualTo(e)){this.game.stopTimer(),this.soundEffect.playWin(),this.youWonDiv.show(),this.playerInput.attr("disabled",""),this.hintDiv.hide(),this.playerSubmitDiv.hide(),this.onScreenKeyboardDiv.hide(),this.newGameButtonsDiv.fadeIn(),setTimeout(()=>{this.newGameButtonsDiv.addClass("animate-bounce")},2300);const t=this.game.getPlayerTime();this.store.addScores(this.playerNameInput.val(),this.game.getSelectedMode(),t),this.evaluateBestScore()}}displayScoreDetails(){const s=(this.game.getPlayerTime()/1e3).toFixed(2);this.currentScoreTime.text(s),this.elapsedTime.text(s),this.youWonScore.text(`Time: ${s}`)}displayHighScoreDetails(){const e=this.store.getHighScores(),t=this.game.getSelectedMode(),s=e[t];this.bestScoreName.text(s.playerName),this.bestScoreTime.text((s.bestScore/1e3).toFixed(2))}evaluateBestScore(){const e=this.game.getSelectedMode(),t=this.store.getAllScores(),s={Easy:{playerName:"No name",bestScore:999999},Normal:{playerName:"No name",bestScore:999999},Hard:{playerName:"No name",bestScore:999999}};for(let o of t[e])o.score<s[e].bestScore&&(s[e].bestScore=o.score,s[e].playerName=o.playerName);this.store.updateAllHighScores(s[e],e),t[e][t[e].length-1].score==s[e].bestScore?(this.displayScoreDetails(),this.displayHighScoreDetails(),this.displayBestConfetti(),this.newBestText.show(),this.youWonText.text("Congratulations!")):(this.displayScoreDetails(),this.displayConfetti(),this.youWonText.text("You're right!"))}displayBestConfetti(){const e=Date.now()+5250,t=["#29cdff","#78ff44","#a864fd"];(function s(){confetti({particleCount:2,angle:60,spread:55,origin:{x:0},colors:t}),confetti({particleCount:2,angle:120,spread:55,origin:{x:1},colors:t}),Date.now()<e&&requestAnimationFrame(s)})()}displayConfetti(){confetti({particleCount:100,spread:70,origin:{y:.6}})}registerAudios(){this.backgroundMusic.audios.forEach(e=>{this.selectBackgroundAudios.append(`
        <div class="inline-flex items-center">
         <label class="relative flex cursor-pointer items-center rounded-full p-2" for="${e.key}">
           <input
             name="sound"
             type="radio"
             class="before:content[''] border-blue-gray-200 before:bg-blue-gray-500 checked:border-default-bg-default-orange peer relative h-5 w-5 cursor-pointer appearance-none rounded-full border text-gray-900 transition-all before:absolute before:left-2/4 before:top-2/4 before:block before:h-8 before:w-8 before:-translate-x-2/4 before:-translate-y-2/4 before:rounded-full before:opacity-0 before:transition-opacity checked:before:bg-default-orange hover:before:opacity-10"
             id="${e.key}"
             value="${e.key}"
           />
 
           <span
             class="pointer-events-none absolute left-2/4 top-2/4 -translate-x-2/4 -translate-y-2/4 text-default-orange opacity-0 transition-opacity peer-checked:opacity-100"
           >
             <svg
               xmlns="http://www.w3.org/2000/svg"
               class="h-3.5 w-3.5"
               viewBox="0 0 16 16"
               fill="currentColor"
             >
               <circle data-name="ellipse" cx="8" cy="8" r="8"></circle>
             </svg>
           </span>
         </label>
         <label class="mt-px cursor-pointer select-none text-sm text-gray-500" for="${e.key}">
           ${e.name}
         </label>
       </div>
      `)})}}new g;
//# sourceMappingURL=index-UHbn3v_n.js.map
